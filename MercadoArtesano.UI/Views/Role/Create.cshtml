@model MercadoArtesano.EN.Role

@{
    ViewData["Title"] = "Crear Rol";
}

<br />
<br />
<br />
<h1>Crear Nuevo Rol</h1>
<span style="color:red">
    @ViewBag.Error
</span>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="Form" asp-action="Create" onsubmit="CreateRecord(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" autocomplete="off" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Crear Puesto o Cargo" class="btn btn-primary" style="margin-right:20px" />
                <a asp-action="Index">Regresar a la Lista</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!--Referencia hacia la libreria de las alertas-->
    <script>
        function showErrorAlert(message) {
            Swal.fire({
                title: 'Error',
                text: message,
                icon: 'error'
            });
        }

        // Mostrar alerta de ViewBag.Error si es necesario
        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            @:showErrorAlert('@ViewBag.Error');
        }

            function CreateRecord(e) {
                e.preventDefault();

                const form = document.getElementById('Form');
                const input = document.getElementById('Name');

                // Este codigo js que esta comentado es para cuando hay varios inputs y asi nos
                // ahorramos varias lineas de codigo

                // const inputs = document.querySelectorAll('.form-input');

                // inputs.forEach(function (input) {
                //     if (!input.value.trim()) {
                //         // Si el campo está vacío, no hacemos nada
                //         return;
                //     }
                // });

                if (!input.value.trim()) {
                    return;
                }

                const regex = /^[A-Za-z/ ]+$/;
                if (!regex.test(input.value.trim())) {
                    // Si el valor no contiene solo letras, marcamos como inválido
                    valid = false;
                    Swal.fire({
                        title: 'Error',
                        text: 'Por favor, ingrese solo letras en el campo.',
                        icon: 'error'
                    });
                    return;
                }

                Swal.fire({
                    title: '¿Guardar Nuevo Registro?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Si, Guardar Registro',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            }
    </script>
}